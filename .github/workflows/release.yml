name: 'AudioWorklet Polyfill Deployment'
on:
  release:
    types: [published]
jobs:
  release:
    name: 'release build'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies with npm
        run: npm install

      - name: 'Build release version of the library'
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  publish:
    name: 'publish to npmjs'
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: 'Setup npm registry'
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies with npm
        run: npm install

      - name: 'Download build artifacts'
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: 'Publish to npmjs.org'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
